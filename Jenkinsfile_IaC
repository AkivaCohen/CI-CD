  pipeline {
    agent {
      docker {
        image 'zenika/terraform-azure-cli'
        label "master"
      } 
    }

    stages {

      stage('fetch_latest_code') {
        steps {
          git branch: 'main', url: 'https://github.com/AkivaCohen/Terraform.git'
        }
      }

      stage('azure cli login') {
          steps {
            withCredentials([azureServicePrincipal('principal-credentials-id')]) {
              sh 'az login --service-principal -u $AZURE_CLIENT_ID -p $AZURE_CLIENT_SECRET -t $AZURE_TENANT_ID'
              sh 'az account set -s $AZURE_SUBSCRIPTION_ID'
            //   sh 'az resource list'
            }
          }
      }

      stage('TF Init&Plan') {
        steps {
          sh 'terraform init'
          sh 'terraform plan'
          -var 'subscription_id='$AZURE_SUBSCRIPTION_ID -var 'client_id='$AZURE_CLIENT_ID -var 'client_secret='$AZURE_CLIENT_SECRET 'tenand_id='$AZURE_TENANT_ID
        }      
      }

      stage('Approval') {
        steps {
          script {
            def userInput = input(id: 'confirm', message: 'Apply Terraform?', parameters: [ [$class: 'BooleanParameterDefinition', defaultValue: false, description: 'Apply terraform', name: 'confirm'] ])
          }
        }
      }

      stage('TF Apply') {
        steps {
          sh 'terraform apply -input=false'
        }
      }
    } 
  }